#+TITLE: Ideas
#+AUTHOR: Paul Provost
#+EMAIL: paul@bouzou.org
#+DESCRIPTION: 
#+FILETAGS: 
#+SETUPFILE: .publish-style

* NEXT Tag mails                                            :@tagging:@email:
  :PROPERTIES:
  :ID:       5df69ece-ea7a-43c5-903f-9649c6a363b7
  :END:
  - Index maildir so that mails are retreivable by ID
  - Forward mail to a specific address (paul-tag@bouzou.org)
  - Mail for that address is picked up by a script. It finds the
    original mail and adds the specified tags.
* Track changes made when installing                        :@install:@linux:
  - Use
    : find ~/local -type f -exec ls -l {} \;
    before and after the install, and diff between them.

* STARTED Use org-mode for book list                         :@org:@booklist:
  :LOGBOOK:
  - State "STARTED"    from ""           [2012-03-23 Fri 11:40]
  :END:
  :PROPERTIES:
  :ID:       3fc74413-c136-42d4-a4da-80903ef2119c
  :END:
  Use the books.org file as a book list
** DONE Book status defined as TODO keywords:
    TOREAD TOBUY READING | READ ABANDONED
** SOMEDAY Add info?
   :LOGBOOK:
   - State "SOMEDAY"    from ""           [2012-03-23 Fri 11:41]
   :END:
   :PROPERTIES:
   :ID:       7bc8dfff-0982-41a8-934c-1b50269b7c34
   :END:
    - Cover
    - Links
** DONE Sort by TODO Status
   :LOGBOOK:
   - State "DONE"       from "TODO"       [2012-03-23 Fri 12:05]
   :END:
   - Select region
   - M-x org-sort
   - type 'o'
*** TODO Automate sorting book list
    :PROPERTIES:
    :ID:       93756109-54f9-44b0-8615-02f72766bd5f
    :END:

* STARTED Export org directory to DropBox as HTML                      :@org:
  :LOGBOOK:
  - State "STARTED"    from ""           [2012-03-23 Fri 11:42]
  :END:
  :PROPERTIES:
  :ID:       6f0721e2-0746-46ae-87bf-9b632729aa5d
  :END:
** MobileOrg is not quite right:
   - Sync is unreliable
   - Can't edit files.
** TODO Make a project for the org directory
   :PROPERTIES:
   :ID:       297b513b-5f62-453e-b4d6-0ebe20769ae0
   :END:
** TODO Make a style sheet that displays nicely
   :PROPERTIES:
   :ID:       e940d551-eeac-466a-8f7c-421b81188a4f
   :END:
   Using markdown.css as a starting point.
** [2012-03-23 Fri] Publish org files                                  :@org:
    - Publishing Org-mode files to HTML
      http://orgmode.org/worg/org-tutorials/org-publish-html-tutorial.html
    - Website with org-mode
      http://thenybble.de/projects/orgsite.html
    - CSS support - The Org Manual
      http://orgmode.org/manual/CSS-support.html
    - [Orgmode] Re: How to remove the automatically generated css codes from e
      http://www.mail-archive.com/emacs-orgmode@gnu.org/msg08857.html
      
* STARTED Script to copy surf URLs to clipboard               :@script:@surf:
  :PROPERTIES:
  :ID:       a54f72e1-16e3-4fd4-92b0-0c68802a825e
  :END:
  : wmctrl -l -x | grep surf.surf | awk  '{print $1}' | xargs -n 1 xprop -id \
  :     | grep -i -e "^WM_NAME(.*) = " -e "^_SURF_URI(.*) = " \
  :     | awk -F= '{print $2}' | tr -d '"' | tac \
  :     |  sed -e 's/\(http[s]*:\)/   \1/; /http[s]*/!s/\(.*\)/ - \1/'
  :     | xclip

* TODO Use org agenda as real agenda                                 :@emacs:
  - [[http://kokoko.fluxionary.net/dump-emacs-org-mode-agendas-and-todo-lists-to-the-command-line/][Dump Emacs org-mode agendas and todo lists to the command line]]

* TODO linnstrument flow for Ableton                 :@linnstrument:@project:
** What
   - Be able to use the linnstrument to play, record and edit on a
     single track in Ableton live.
   - Be able to use per-note channel with all 3D expression (volume,
     timbre and pitch).
   - Be able to use split mode to record to two tracks.
** Why Ableton
   - 
** How
*** Proposition 1
    - Use a rack that has copies of the plugin to use in as many
      chains as there are MIDI channels. The rack's select control
      must be accessible by a macro knob (or maybe not. see M4L
      device).
    - Have a M4L device that
      - For each MIDI message received, emits a CC of a specific unused
        number (e.g. 88) message targeted to the rack's chain selector
        with the channel number as data, then repeat the MIDI
        data. Effectively, this targets the MIDI messages to a rack's
        chain depending on which channel they are sent on.
      - Be able to accept/reject a number of MIDI channels via on/off
        buttons. This enables us to operate one track per side of the
        split even though both tracks will accept all MIDI channels.
*** Proposition 2
    - Proposition 1 might result in a confusing editing display, with
      both sides of the split being recorded on both tracks.
    - Have another M4L device that actually splits the input stream in
      two channel sets, which are then forwarded to the two main
      tracks. I'm not sure that this is possible in live (external
      instruments?).

