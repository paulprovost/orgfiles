#+TITLE: Lemur-like iPad (also iPhone and iPod Touch) app
#+FILETAGS: @project:@iPad

* Name ideas
  - Control-R
  - ctrl-r
  - ctrl-R

* Requirements / Tech Specs
** Client/Server architecture
   - The server is running on controlled applications' host computer.
   - The client runs on the iPad/iPhone/iPod touch and displays the
     pages for the user to interact with
   - Pages are sent from the server to the client.
   - Pages are stored / defined on the server
** MV2C architecture
   - Model is the interface to the things that are being controlled:
     - Live
     - Mackie Control device
     - Plug-in controller
   - View displays to the user.
   - View2 receives input from the user.
   - Controller mediates communication.
** Client and server communicate through OSC
   - Both performance and internal data.
** Interface with Novation Automap
   - If the protocol details are made available.
     FWP: only client SDK is available. May need Audio Unit wrapper
     development to control plug-ins
** Use svg format for interfaces?
   Not natively supported on the iPhone. But parseable.
   - May be useful for rapid layout definition. maybe build a quick
     parser.
   - Should probably be converted from XML to JSON for better
     transmission...
** Screen DPI / widget sizes
   - iPhone DPI
     - Screen is 320x480 and 2"x3" -> 160 dpi
   - iPad DPI
     - Screen is 1024x768 @ 132 dpi
   - Conversion: iPad = iPhone * 0.825

* Applications
** Studio
*** Mixer / plugin control
*** Dedicated plugin controller
    - Be able to modify configuration from the display.
      - Add pages
      - Add controls to pages
*** Effects setup controller
    Have Live setup with different effects and be able to bring them
    in/out much like a clip-based performance.
** Live / performance
*** Effects controller
    - Possibly display only
    - Footswitch controlled
    - Control in-computer effects as well as outboard (using digitally
      controlled analog switcher)
    - Use AppleTV running MAX patch as in-rack computer
      (May have to run full Mac OS - for MIDI interface)
*** Lyric prompter
*** Live / clip based performace
**** General ideas
     - Have "undo" button.
     - Be able to set a state to return to, and return there at the
       push of a button.
     - Quickly preset states.
*** Looper-like performance
    - Display waveform (maybe multiple)
    - Quickly pick / add / delete tracks, with visual feedback (again,
      this may be laptop-only)

* References
** OSC                                                                 :@osc:
   - vvopensource - frameworks for working with OSC and MIDI data on OS X
     http://code.google.com/p/vvopensource/
** iPhone development                                       :@iphone:@opengl:
   - How To Write an iPhone App in 14 Days
     http://www.smallnetbuilder.com/content/view/30712/87/
   - iPhone Development | iPhone Programming | iPhone Application Development | iPhone Game Development | iPhone App Development | iPhone Software Development
     http://iphonedevelopmentbits.com/
   - 18 OpenGL ES Resources That You Must Know! | iPhone Development Tutorials and Programming Tips
     http://maniacdev.com/2009/10/18-opengl-es-resources-that-you-must-know/
   - Nehe OpenGL Tutorial #2 In iPhone OpenGL ES
     http://maniacdev.com/2009/04/nehe-opengl-tutorial-2-in-iphone-opengl-es/
   - App every day in August!
     http://appeveryday.wordpress.com/
   - iPhone SDK Examples and Tutorials - About Objects
     http://www.aboutobjects.com/tutorials.html
   - iPhone OpenGL ES Nehe Lesson #3 Explained | iPhone Development Tutorials and Programming Tips
     http://maniacdev.com/2009/05/iphone-opengl-es-nehe-lesson-explained/
   - Oolong Engine
     http://oolongengine.com/
   - oolongengine - Project Hosting on Google Code
     http://code.google.com/p/oolongengine/
** MAX / Max for Live                                            :@max:@live:
   - Max for Live Documentation
     http://www.cycling74.com/docs/max5/vignettes/intro/doclive.html
   - Creating Max for Live Devices
     http://www.cycling74.com/docs/max5/vignettes/core/live_creatingdevices.html
   - Max for Live Tutorials
     http://www.cycling74.com/docs/max5/vignettes/core/live_resources_tutorials.html
   - Pluggo for Live Devices
     http://www.cycling74.com/docs/max5/vignettes/core/live_resources_pluggo.html
   - Creating Devices that use the Live API
     http://www.cycling74.com/docs/max5/vignettes/core/live_api.html
   - Max for Live Abstractions
     http://www.cycling74.com/docs/max5/vignettes/core/live_resources_abstractions.html#m4l_api_abstractions

* Tasks                                                               :@task:
  :PROPERTIES:
  :ID:       D04F39D6-E0E9-41C5-A37F-73A2E26E2CDC
  :END:
** Compile the accelerometer simulator app and install on iPhone
   :PROPERTIES:
   :ID:       CAA86BF8-FD4E-4B2E-BD8D-D5A7A733C991
   :END:
   - The app was built with SDK 2.1. Compiling with 3.2 for the
     simulator worked.
   - Must make changes to Info.plist bundle identifier to match your
     development certificate.
   - Info on certificates and provisioning at the
     [[http://developer.apple.com/iphone/manage/overview/index.action][iPhone Developer Program Portal]]
     - Installing and configuring a provisioning profile information [[http://developer.apple.com/iphone/manage/provisioningprofiles/howto.action][here]].
** Get iPhone talking OSC with MAX on a Mac
   :PROPERTIES:
   :ID:       A98C7CF7-F893-4301-AA00-F1082554BFAB
   :END:
   Use TouchOSC
** Write an iPad app that send OSC to the Mac
   :PROPERTIES:
   :ID:       6812AA0C-DF4F-4646-909D-71A41F756015
   :END:
*** Also receives
    :PROPERTIES:
    :ID:       61C166EB-E37C-4552-909B-F766602F3A9C
    :END:
** Get the Automap SDK
   :PROPERTIES:
   :ID:       3735A472-7BBB-4A38-AFE2-F27CB2EEF4A8
   :END:
   - [[http://www.focusrite.com/developer/lib/exe/fetch.php%3Fid%3Dautomapsdk&cache%3Dcache&media%3Dautomapsdk1.0b1.zip][Download]] from the Novation web site.
   - Additional usage information [[http://www.focusrite.com/developer/doku.php%3Fid%3Dautomapsdk][here]].
*** CANCELLED Try it out.
    :LOGBOOK:
    - State "CANCELLED"  from "TODO"       [2010-02-19 Fri 07:17] \\
      I don't want to write an Automap client, I want to write an Automap device...
    :END:
    :PROPERTIES:
    :ID:       CB08077A-F3E2-4C74-9A11-BAEEA887DDAE
    :END:
    - Make a connection to the Automap server and have some parameters
      show up.
    - Try control both ways.
*** Seems that I don't want to write a client
    :PROPERTIES:
    :ID:       F2CA4C0D-33C7-490B-972F-1E0B0F90D346
    :END:
    I really want to write a "device" that talks to the server.
** Write a MAX object that's an Automap client
   :PROPERTIES:
   :ID:       0F1B4CC3-35FD-4D3D-A523-2D42BABBDB63
   :END:
[2010-02-09 Tue 13:04]
   Maybe later. Not for this project
** NEXT [#A] Write an iPad app that sends and receives OSC
   :PROPERTIES:
   :ID:       CB42D8B5-8489-4A29-9D80-391638E16566
   :END:
   - Great OSC writeup, with MAX info (need to send/receive OSC in MAX
     as well...)
     - OSC Tutorial - Part 1 of our OSC tutorial series | max4live.info
       http://www.max4live.info/content/osc-tutorial-part-1-our-osc-tutorial-series
   - Compiled and ran the vvopensource examples.
** Darn it. Somebody has written something similar
   :PROPERTIES:
   :ID:       40D12765-30F6-444D-9064-1F00ABD6C917
   :END:
   iPhone / iPod Touch Max 5 external
   http://www.nr74.org/c74.html
   So, start from here and build up controllers, or rewrite?
** NEXT [#A] Write an iPad view app
   Displays graphical entites and allows them to be picked and moved.
