#+TITLE: Lemur-like iPad (also iPhone and iPod Touch) app
#+FILETAGS: @project:@ipad:@ctrlr

* Name ideas
  - Control-R
  - ctrl-r
  - ctrl-R
  - ctrlr

* Requirements / Tech Specs
** Client/Server architecture
   - The server is running on controlled applications' host computer.
   - The client runs on the iPad/iPhone/iPod touch and displays the
     pages for the user to interact with
   - Pages are sent from the server to the client.
   - Pages are stored / defined on the server
** MV2C architecture
   - Model is the interface to the things that are being controlled:
     - Live
     - Mackie Control device
     - Plug-in controller
   - View displays to the user.
   - View2 receives input from the user.
   - Controller mediates communication.
** Client and server communicate through OSC
   - Both performance and internal data.
** Interface with Novation Automap
   - If the protocol details are made available.
     FWP: only client SDK is available. May need Audio Unit wrapper
     development to control plug-ins
** Use svg format for interfaces?
   Not natively supported on the iPhone. But parseable.
   - May be useful for rapid layout definition. maybe build a quick
     parser.
   - Should probably be converted from XML to JSON for better
     transmission...
** Screen DPI / widget sizes
   - iPhone DPI
     - Screen is 320x480 and 2"x3" -> 160 dpi
   - iPad DPI
     - Screen is 1024x768 @ 132 dpi
   - Conversion: iPad = iPhone * 0.825

* Technologies:
** [[http://livecontrol.q3f.org/ableton-liveapi/liveosc/][LiveOSC]]
   Remote MIDI Script for Live that allows control and broadcasts
   information on the current Live set.

* Applications
** Studio
*** Mixer / plugin control
*** Dedicated plugin controller
    - Be able to modify configuration from the display.
      - Add pages
      - Add controls to pages
*** Effects setup controller
    Have Live setup with different effects and be able to bring them
    in/out much like a clip-based performance.
** Live / performance
*** Effects controller
    - Possibly display only
    - Footswitch controlled
    - Control in-computer effects as well as outboard (using digitally
      controlled analog switcher)
    - Use AppleTV running MAX patch as in-rack computer
      (May have to run full Mac OS - for MIDI interface)
*** Lyric prompter
*** Live / clip based performace
**** General ideas
     - Have "undo" button.
     - Be able to set a state to return to, and return there at the
       push of a button.
     - Quickly preset states.
*** Looper-like performance
    - Display waveform (maybe multiple)
    - Quickly pick / add / delete tracks, with visual feedback (again,
      this may be laptop-only)

* Ideas
** Have a drawer for additional controls (switch views in Live)
   [2010-06-30 Wed 15:43]
** Use automap sdk to write automap interface for other software / devices (PODxt Live)
[2010-06-30 Wed 15:27]
*** Note ID: (null)

* References
** OSC                                                                 :@osc:
   - VVOpenSource
     - vvopensource - frameworks for working with OSC and MIDI data on OS X
       http://code.google.com/p/vvopensource/
     - [[https://github.com/pizthewiz/VVOpenSource][pizthewiz/VVOpenSource]]
     - [[http://www.trembl.org/codec/532/][OSC to and from the iPhone with VVOSC]]

   - [[https://github.com/danieldickison/CocoaOSC][danieldickison/CocoaOSC]]
     Does not support bundles.

** iPhone development                                       :@iphone:@opengl:
   - How To Write an iPhone App in 14 Days
     http://www.smallnetbuilder.com/content/view/30712/87/
   - iPhone Development | iPhone Programming | iPhone Application Development | iPhone Game Development | iPhone App Development | iPhone Software Development
     http://iphonedevelopmentbits.com/
   - 18 OpenGL ES Resources That You Must Know! | iPhone Development Tutorials and Programming Tips
     http://maniacdev.com/2009/10/18-opengl-es-resources-that-you-must-know/
   - Nehe OpenGL Tutorial #2 In iPhone OpenGL ES
     http://maniacdev.com/2009/04/nehe-opengl-tutorial-2-in-iphone-opengl-es/
   - App every day in August!
     http://appeveryday.wordpress.com/
   - iPhone SDK Examples and Tutorials - About Objects
     http://www.aboutobjects.com/tutorials.html
   - iPhone OpenGL ES Nehe Lesson #3 Explained | iPhone Development Tutorials and Programming Tips
     http://maniacdev.com/2009/05/iphone-opengl-es-nehe-lesson-explained/
   - Oolong Engine
     http://oolongengine.com/
   - oolongengine - Project Hosting on Google Code
     http://code.google.com/p/oolongengine/
** MAX / Max for Live                                            :@max:@live:
   - Max for Live Documentation
     http://www.cycling74.com/docs/max5/vignettes/intro/doclive.html
   - Creating Max for Live Devices
     http://www.cycling74.com/docs/max5/vignettes/core/live_creatingdevices.html
   - Max for Live Tutorials
     http://www.cycling74.com/docs/max5/vignettes/core/live_resources_tutorials.html
   - Pluggo for Live Devices
     http://www.cycling74.com/docs/max5/vignettes/core/live_resources_pluggo.html
   - Creating Devices that use the Live API
     http://www.cycling74.com/docs/max5/vignettes/core/live_api.html
   - Max for Live Abstractions
     http://www.cycling74.com/docs/max5/vignettes/core/live_resources_abstractions.html#m4l_api_abstractions

* Links
** [2012-05-20 Sun]
   - [[http://www.mikeash.com/pyblog/friday-qa-2009-12-11-a-gcd-case-study-building-an-http-server.html][mikeash.com: Friday Q&A 2009-12-11: A GCD Case Study: Building an HTTP Server]]
** [2010-03-20 Sat]
  - How to make sprite look like it is lighted up when touched « cocos2d for iPhone
    http://www.cocos2d-iphone.org/forum/topic/4262
  - cocos2d Tutorials – TOC | BIT-101 Blog
    http://www.bit-101.com/blog/?p=2138
  - Cocos2d – Part 4: Menus and Transitions | BIT-101 Blog
    http://www.bit-101.com/blog/?p=2143
  - Monocle Studios Tutorials - iPhone Development with cocos2d-iphone
    http://monoclestudios.com/cocos2d_whitepaper.html
  - Intro to Box2D with Cocos2D Tutorial: Bouncing Balls
    http://www.raywenderlich.com/457/intro-to-box2d-with-cocos2d-tutorial-bouncing-balls
  - Anton Mills | Cocos2D iPhone Hello World
    http://www.antonmills.com/?p=233
  - Cocos2d – 2D OpenGL for the iPhone made Easy. Part 1. | BIT-101 Blog
    http://www.bit-101.com/blog/?p=2115
  - Cocos2D – Part 2 | BIT-101 Blog
    http://www.bit-101.com/blog/?p=2123
  - YouTube - cocos2d iphone tutorial
    http://www.youtube.com/results?search_query=cocos2d+iphone+tutorial&search_type=&aq=f
  - Fun with cocosDenshion and Audio Metering [Update] | Fancy Rat Studios
    http://fancyratstudios.com/2010/02/programming/cocos2d/fun-with-cocosdenshion-and-audio-metering/
  - ProgressTimer for cocos2d | Fancy Rat Studios
    http://fancyratstudios.com/2010/02/programming/progresstimer-for-cocos2d/#more-126
  - YouTube - Cocos2d + Box2d + SVG + InkScape
    http://www.youtube.com/watch?v=7xUmAHOkYaY&feature=related
  - YouTube - Cocos2D Tutorial - Dragging Multiple Images.mov
    http://www.youtube.com/watch?v=5p9gnH-1dWs
  - YouTube - SDKTutor's Channel
    http://www.youtube.com/user/SDKTutor

** [2013-01-03 Thu 15:11] Hardware                      :@hardware:@encoders:
   - [[http://www.bourns.com/ProductLine.aspx?name=optical_encoders][Bourns - Optical Encoders]]
   - [[https://www.sparkfun.com/products/10407?][Rotary Encoder LED Ring Breakout Board - Blue - SparkFun Electronics]]
   - [[https://www.sparkfun.com/products/10595?][Circular LED Bargraphs - Red - SparkFun Electronics]]
   - [[http://top-up.so-buy.com/front/bin/cglist.phtml?Category=325007][TOP-UP INDUSTRY CORP. -- LED CCL RING]]
   - [[http://www.diystompboxes.com/smfforum/index.php?topic=81141.0][LED indicator rings for rotary encoders?]]
   - [[http://radionics.rs-online.com/web/p/products/6917705/][Buy Rotary Encoders 14mm Rotary Optical Enc. w/Switch 64PPR Bourns EM14A0D-C24-L064S online from RS for next day delivery.]]
   - [[http://mayhewlabs.com/news/rotary-encoder-led-ring-videos-and-library][Rotary Encoder LED Ring – Videos and Arduino Library | Mayhew Labs]]
   - [[http://www.circuitsathome.com/mcu/reading-rotary-encoder-on-arduino][Reading rotary encoder on Arduino « Circuits@Home]]
   - [[http://www.youtube.com/watch?v=uZ66PkNUgZI][Mayhew Labs Rotary Encoder LED Ring - YouTube]]
   - [[http://www.digikey.com/product-detail/en/ACZ11BR1E-20KQD1-20C/102-1764-ND/1923359][ACZ11BR1E-20KQD1-20C CUI Inc | 102-1764-ND | DigiKey]]

** [2013-01-04 Fri 11:17] Raspberry Pi expansion                     :@raspi:
   - [[http://learn.adafruit.com/reading-a-analog-in-and-controlling-audio-volume-with-the-raspberry-pi/overview][Overview | Analog Inputs for Raspberry Pi Using the MCP3008 | Adafruit Learning System]]
   - [[http://hackaday.com/2012/07/28/reading-analog-sensors-with-the-raspberry-pi/][Reading analog sensors with the Raspberry Pi]]
   - [[http://www.briandorey.com/post/Raspberry-Pi-I2C-Analog-to-Digital-Converter.aspx][Brian Dorey.com | Raspberry Pi I2C Analog-to-Digital Converter]]
   - [[http://www.abelectronics.co.uk/][AB Electronics UK online electronic shop]]

** [2013-01-04 Fri 16:09] OSC on OSX                           :@osc:@cinder:
   - [[http://niltoid.com/blog/ableton-live-talks-osc-to-cinder/][Ableton Live Talks OSC to Cinder | niltoid.niltoid.]]
   - [[http://nodebox.net/code/index.php/OSC][NodeBox | OSC]]

** [2013-01-04 Fri 16:51] Motorized fader                            :@fader:
   - [[http://www.hazelwoodsound.com/motorized-faders-and-the-arduino/][Cody Hazelwood | Motorized Faders and the Arduino]]

** [2013-01-10 Thu 15:04] Reaper integration                        :@reaper:
   Alex likes Reaper?
   - [[http://www.cockos.com/reaper/reference.php][REAPER | Developer]]

** [2013-01-11 Fri 13:48] Twisted-based OSC framework          :@osc:@python:
   - [[https://bitbucket.org/arjan/txosc/wiki/Home][arjan / txosc / wiki / Home — Bitbucket]]

** [2013-03-08 Fri 07:06] Switches                      :@hardware:@switches:
   - [[http://www.mammothelectronics.com/4SFSSPST-M-p/800-1003.htm][Single Pole Single Throw (SPST) Momentary Soft-Touch Push Button Footswitch]]
   - [[http://buildyourownclone.com/storeswitches.html][storeswitches]]
   - [[http://www.diystompboxes.com/wpress/][DIYstompboxes.com]]
   - [[http://diystompboxes.com/zencart/index.php?main_page=index&zenid=0fff43ca6a12ad3f956d3c7504aa5e3c][DIYstompboxes.com Store, Build your pedal!]]
   - [[http://diy-fever.com/][DIY Fever – Building my own guitars, amps and pedals]]
   - [[http://www.pedalpartsplus.com/mm5/merchant.mvc?Screen=CTGY&Store_Code=PPP&Category_Code=SWI][Pedal Parts Plus: Switches]]

** [2013-03-08 Fri 07:16] Ableton Live scripting                 :@live:@osc:
   - [[http://createdigitalmusic.com/2010/03/hacking-ableton-live-unofficial-osc-scripting-for-more-control/][Hacking Ableton Live: Unofficial OSC, Scripting for More Control]]
   - [[http://remotescripts.blogspot.ca/2010/03/introduction-to-framework-classes.html][_Framework: Introduction to the Framework Classes]]
   - [[http://remotescripts.blogspot.ca/2010/05/introduction-to-framework-classes-3.html][_Framework: Introduction to the Framework Classes Part 3]]
   - [[http://remotescripts.blogspot.ca/][_Framework]]
   - [[http://blogs.bl0rg.net/netzstaub/2008/08/15/writing-ableton-control-surface-scripts/][netzstaub » Writing Ableton Control Surface Scripts]]
   - [[http://livecontrol.q3f.org/ableton-liveapi/liveosc/][LiveOSC – Complete Control of Ableton Live Using Your iPad or iPod]]
   - [[http://monome.q3f.org/browser/trunk/LiveOSC/OSCAPI.txt][OSCAPI.txt in trunk/LiveOSC – Monome SVN]]
   - [[http://niltoid.com/blog/ableton-live-talks-osc-to-cinder/][Ableton Live Talks OSC to Cinder | niltoid.niltoid.]]
   - [[http://libcinder.org/about/][About | Cinder]]


* Tasks                                                               :@task:
  :PROPERTIES:
  :ID:       D04F39D6-E0E9-41C5-A37F-73A2E26E2CDC
  :END:
** Compile the accelerometer simulator app and install on iPhone
   :PROPERTIES:
   :ID:       CAA86BF8-FD4E-4B2E-BD8D-D5A7A733C991
   :END:
   - The app was built with SDK 2.1. Compiling with 3.2 for the
     simulator worked.
   - Must make changes to Info.plist bundle identifier to match your
     development certificate.
   - Info on certificates and provisioning at the
     [[http://developer.apple.com/iphone/manage/overview/index.action][iPhone Developer Program Portal]]
     - Installing and configuring a provisioning profile information [[http://developer.apple.com/iphone/manage/provisioningprofiles/howto.action][here]].
** Get iPhone talking OSC with MAX on a Mac
   :PROPERTIES:
   :ID:       A98C7CF7-F893-4301-AA00-F1082554BFAB
   :END:
   Use TouchOSC
** Write an iPad app that send OSC to the Mac
   :PROPERTIES:
   :ID:       6812AA0C-DF4F-4646-909D-71A41F756015
   :END:
*** Also receives
    :PROPERTIES:
    :ID:       61C166EB-E37C-4552-909B-F766602F3A9C
    :END:
** Get the Automap SDK
   :PROPERTIES:
   :ID:       3735A472-7BBB-4A38-AFE2-F27CB2EEF4A8
   :END:
   - [[http://www.focusrite.com/developer/lib/exe/fetch.php%3Fid%3Dautomapsdk&cache%3Dcache&media%3Dautomapsdk1.0b1.zip][Download]] from the Novation web site.
   - Additional usage information [[http://www.focusrite.com/developer/doku.php%3Fid%3Dautomapsdk][here]].
*** CANCELLED Try it out.
    :LOGBOOK:
    - State "CANCELLED"  from "TODO"       [2010-02-19 Fri 07:17] \\
      I don't want to write an Automap client, I want to write an Automap device...
    :END:
    :PROPERTIES:
    :ID:       CB08077A-F3E2-4C74-9A11-BAEEA887DDAE
    :END:
    - Make a connection to the Automap server and have some parameters
      show up.
    - Try control both ways.
*** Seems that I don't want to write a client
    :PROPERTIES:
    :ID:       F2CA4C0D-33C7-490B-972F-1E0B0F90D346
    :END:
    I really want to write a "device" that talks to the server.
** Write a MAX object that's an Automap client
   :PROPERTIES:
   :ID:       0F1B4CC3-35FD-4D3D-A523-2D42BABBDB63
   :END:
[2010-02-09 Tue 13:04]
   Maybe later. Not for this project
** TODO [#A] Write an iPad app that sends and receives OSC
   :LOGBOOK:
   - State "TODO"       from "NEXT"       [2011-03-07 Mon 12:14]
   :END:
   :PROPERTIES:
   :ID:       CB42D8B5-8489-4A29-9D80-391638E16566
   :END:
   - Great OSC writeup, with MAX info (need to send/receive OSC in MAX
     as well...)
     - OSC Tutorial - Part 1 of our OSC tutorial series | max4live.info
       http://www.max4live.info/content/osc-tutorial-part-1-our-osc-tutorial-series
   - Compiled and ran the vvopensource examples.
** Darn it. Somebody has written something similar
   :PROPERTIES:
   :ID:       40D12765-30F6-444D-9064-1F00ABD6C917
   :END:
   iPhone / iPod Touch Max 5 external
   http://www.nr74.org/c74.html
   So, start from here and build up controllers, or rewrite?
** TODO [#A] Write an iPad view app
   :LOGBOOK:
   - State "TODO"       from "NEXT"       [2011-03-07 Mon 12:14]
   :END:
   :PROPERTIES:
   :ID:       82859C14-CA70-4650-BA32-E0FE6AA68686
   :END:
   Displays graphical entites and allows them to be picked and moved.

* Journal
** Continuous NSThread class:
   From [[https://github.com/alunbestor/Boxer][Boxer]], a DOS game emulator for OSX
   - [[https://github.com/alunbestor/Boxer/blob/master/Other%2520Sources/ADBToolkit/ADBContinuousThread.m][ADBContinuousThread.m]], [[https://github.com/alunbestor/Boxer/blob/master/Other%2520Sources/ADBToolkit/ADBContinuousThread.h][ADBContinuousThread.h]]
   - Usage: 
** [2013-03-29 Fri 12:18] MIDI working. Now for OSC.
   - Downloaded [[http://liblo.sf.net/][liblo]].
   - Compiled (64 bits for now. Screw backwards compatibility):
     : export CFLAGS="-arch x86_64"
     : export CXXFLAGS=$CFLAGS
     : export LDFLAGS=$CFLAGS
     : ./configure --enable-static
     : make
     - Not a dynamic library. dylibs register where they should be
       installed inside themselves. I do not want them installed in
       =/usr/local/lib=, nor do I want to go through [[-%20%5B%5Bhttp://www.mikeash.com/pyblog/friday-qa-2009-11-06-linking-and-install-names.html%5D%5Bmikeash.com:%20Friday%20Q&A%202009-11-06:%20Linking%20and%20Install%20Names%5D%5D%0A][this]] to monkey
       around with them. So static library it is.
   - Adding to the project
     - Library (liblo.a)
       - Create a lib directory as a sibling of the .xcodeproj file
       - Copy the library there
       - Select Project
       - Choose Build Phases tab
       - In "Link Binary With Libraries", click "+"
       - Click "Other" and navigate to the library
       - Move to the Frameworks folder
     - Includes
       - Create include directory as sibling of .xcodeproj file
       - Copy the include directory (=lo=) there
       - In Project -> Build Settings, look for User Header Search Paths
       - Double-click (without expanding) and add =$(SRCROOT)/include=

