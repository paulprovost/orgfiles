#+TITLE: Projects
#+AUTHOR: Paul Provost
#+EMAIL: paul@bouzou.org
#+DESCRIPTION: Main project tracking file - test
#+FILETAGS: projects

* NEXT Install 1TB SSD in Prowler
  :PROPERTIES:
  :ID:       df0d5be9-8e3d-4ee6-b711-c54cdbb0bd23
  :END:

* Experiment with Touchable                                           :@live:
** DONE Install the Ableton Live component
** NEXT Test with a sample Live Set
   :PROPERTIES:
   :ID:       fb5a3939-6832-4e0f-91ca-ef7edd11965c
   :END:

* Workbench cleanup                                                    :@diy:
** DONE Clear the bookcase and store the contents in a Rubbermaid bin
   :LOGBOOK:
   - State "DONE"       from "NEXT"       [2014-03-21 Fri 22:13]
   :END:
** DONE Clear the nook floor
   :LOGBOOK:
   - State "DONE"       from "TODO"       [2014-03-21 Fri 22:13]
   :END:
** DONE Install the bins and the drawers
   :LOGBOOK:
   - State "DONE"       from "TODO"       [2014-03-21 Fri 22:13]
   :END:
** DONE Sort out parts into bins and drawers
   :LOGBOOK:
   - State "DONE"       from "TODO"       [2014-03-21 Fri 22:13]
   :END:

* DONE Fix Marie's headphones
  :LOGBOOK:
  - State "DONE"       from "NEXT"       [2014-03-21 Fri 22:12]
  :END:

* DONE Fix Jocelyn's guitar cable
  :LOGBOOK:
  - State "DONE"       from "NEXT"       [2014-03-21 Fri 22:12]
  :END:

* iPad-based remote control for Pascal
** NEXT Explore the JavaScript code.
   :PROPERTIES:
   :ID:       f5ae5d29-b877-4b42-9a4c-a87c9b3ef5d5
   :END:
** TODO Load text and image labels from a text file
   :PROPERTIES:
   :ID:       d6243ee9-57da-4e13-8d34-23e4132603cc
   :END:

* MIDI knob (knobber)                                   :@midi:@arduino:@diy:
** Links
*** Knobber
    - [[http://echolevel.tumblr.com/post/49737964614/knobber-usb-midi-controller-by-echolevel][Echolevel — Knobber - USB MIDI single knob/button controller...]]
      - [[http://www.vguitarforums.com/smf/index.php?topic=8532.msg61078#msg61078][Build the Arduino "knobber-usb-midi-controller" (Teensy 3.0 Board)]]
*** Teensy
    - [[http://forum.pjrc.com/threads/24163-Multiple-MIDI-devices?highlight=usb+midi][Multiple MIDI devices]]
    - [[http://forum.pjrc.com/threads/23523-Change-device-name?highlight=midi][Change device name]]
    - [[http://forum.pjrc.com/threads/23605-Teensy-mk-port-of-Arduino-mk-Makefile][Teensy.mk -- port of Arduino.mk Makefile]]

** DONE Isolate sources and compile using a Makefile
   :LOGBOOK:
   - State "DONE"       from "NEXT"       [2014-03-21 Fri 22:02]
   :END:
** DONE Wire up the Teensy as it will sit in the enclosure
   :LOGBOOK:
   - State "DONE"       from "NEXT"       [2014-03-21 Fri 22:02]
   :END:
** DONE First enclosure version completed
   Used rubber feet to secure the teensy board in
** TODO Add SYSEX code to dump the settings on empty message received
   :PROPERTIES:
   :ID:       eaa5ffd4-e1e0-46b7-9cee-9de38cc372f1
   :END:
   - [[http://www.2writers.com/eddie/TutSysEx.htm][Eddie's Home - MIDI - SysEx Tutorial]]
   - [[http://www.petesqbsite.com/sections/express/issue18/midifilespart1.html][MIDI Programming - A Complete Study - Part 1 The Basics]]

** TODO Productize MAX patch
   :PROPERTIES:
   :ID:       9a4f7b72-e49e-453b-a4c6-150b5e17655d
   :END:
   - Make presentation view
   - Add send/get buttons
** TODO Add a LED
   :PROPERTIES:
   :ID:       bb0216e4-07ad-4e42-bbf7-ce395a152768
   :END:
   Mirror the status of the button.
** TODO Slave mode for the LED
   :PROPERTIES:
   :ID:       d14e08cd-a0d3-4251-82ab-c10e26b1e932
   :END:
   Receive a value from a CC and turn on/off accordingly

* More complicated control device
** TODO Wire up a 16x2 display to the teensy breadboard prototype
   :PROPERTIES:
   :ID:       78b99b8d-45f2-44dc-8788-870e75426357
   :END:
   Make it display simple text.
** TODO Show the controller value on the display
   :PROPERTIES:
   :ID:       b2e9261e-e552-4914-ac92-b15a020fa7f3
   :END:

* MIDI Expression Pedal interface                       :@midi:@arduino:@diy:
** Links
*** An example
    - [[http://www.audiofront.net/MIDIExpression.php?action=overview][Audiofront - MIDI Expression]]
      He does auto-detection of pedal type. I have to be careful that
      mono jacks do not blow up the teensy. If possible, auto-handle
      them like this guy.
*** Expression Pedal internals                            :@expressionpedals:
    - [[http://www.strymon.net/2010/07/12/strymon-tech-corner-1-anatomy-of-an-expression-pedal/][Strymon Tech Corner #1 - Anatomy of an expression pedal » strymon]]
    - [[http://www.strymon.net/2010/09/07/strymon-tech-corner-2-build-your-own-expression-pedal/][Strymon Tech Corner #2 - Build your own expression pedal » strymon]]
    - [[http://www.strymon.net/2011/10/10/strymon-tech-corner-3-volume-pedal-as-an-expression-pedal/][Strymon Tech Corner #3 – Volume Pedal as an Expression Pedal » strymon]]
    - [[http://missionengineering.com/?product_cat=multi-use-expression-pedals][Multi-Use Expression Pedals Archives | missionengineering.commissionengineering.com]]

* Logic Control Surface plugin                                :@logic:@ctrlr:
** DONE Get the Logic Control Surface SDK
** DONE Compile the provided examples
** STARTED Create a MAX patch to act as a Logic Control Surface
   :LOGBOOK:
   - State "STARTED"    from ""           [2014-03-21 Fri 22:16]
   :END:
   :PROPERTIES:
   :ID:       ab511ea7-5d42-46eb-9ba1-eb583fa4e298
   :END:
** NEXT Duplicate the OSC plugin and make it connect to the MAX patch
   :PROPERTIES:
   :ID:       2fab55ed-660c-475b-800f-bf10711e7fec
   :END:
   Check what OSC messages the MAX patch receives.
** TODO Simplify the plugin code and add missing messages
   :PROPERTIES:
   :ID:       190fbac1-25f9-4a1f-8e5d-5f3791761b7c
   :END:

* [[file:projects/ctrlr.org][Ctrlr]]
