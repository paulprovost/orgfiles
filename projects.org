#+TITLE: Projects
#+AUTHOR: Paul Provost
#+EMAIL: paul@bouzou.org
#+DESCRIPTION: Main project tracking file - test
#+FILETAGS: projects

* NEXT Install 1TB SSD in Prowler
  :PROPERTIES:
  :ID:       df0d5be9-8e3d-4ee6-b711-c54cdbb0bd23
  :END:

* Experiment with Touchable                                           :@live:
** DONE Install the Ableton Live component
** NEXT Test with a sample Live Set
   :PROPERTIES:
   :ID:       fb5a3939-6832-4e0f-91ca-ef7edd11965c
   :END:

* Workbench cleanup                                                    :@diy:
** DONE Clear the bookcase and store the contents in a Rubbermaid bin
   :LOGBOOK:
   - State "DONE"       from "NEXT"       [2014-03-21 Fri 22:13]
   :END:
** DONE Clear the nook floor
   :LOGBOOK:
   - State "DONE"       from "TODO"       [2014-03-21 Fri 22:13]
   :END:
** DONE Install the bins and the drawers
   :LOGBOOK:
   - State "DONE"       from "TODO"       [2014-03-21 Fri 22:13]
   :END:
** DONE Sort out parts into bins and drawers
   :LOGBOOK:
   - State "DONE"       from "TODO"       [2014-03-21 Fri 22:13]
   :END:

* DONE Fix Marie's headphones
  :LOGBOOK:
  - State "DONE"       from "NEXT"       [2014-03-21 Fri 22:12]
  :END:

* DONE Fix Jocelyn's guitar cable
  :LOGBOOK:
  - State "DONE"       from "NEXT"       [2014-03-21 Fri 22:12]
  :END:

* iPad-based remote control for Pascal
** NEXT Explore the JavaScript code.
   :PROPERTIES:
   :ID:       f5ae5d29-b877-4b42-9a4c-a87c9b3ef5d5
   :END:
** TODO Load text and image labels from a text file
   :PROPERTIES:
   :ID:       d6243ee9-57da-4e13-8d34-23e4132603cc
   :END:

* More complicated control device
** TODO Wire up a 16x2 display to the teensy breadboard prototype
   :PROPERTIES:
   :ID:       78b99b8d-45f2-44dc-8788-870e75426357
   :END:
   Make it display simple text.
** TODO Show the controller value on the display
   :PROPERTIES:
   :ID:       b2e9261e-e552-4914-ac92-b15a020fa7f3
   :END:

* MIDI Expression Pedal interface                       :@midi:@arduino:@diy:
** Links
*** An example
    - [[http://www.audiofront.net/MIDIExpression.php?action=overview][Audiofront - MIDI Expression]]
      He does auto-detection of pedal type. I have to be careful that
      mono jacks do not blow up the teensy. If possible, auto-handle
      them like this guy.
*** Expression Pedal internals                            :@expressionpedals:
    - [[http://www.strymon.net/2010/07/12/strymon-tech-corner-1-anatomy-of-an-expression-pedal/][Strymon Tech Corner #1 - Anatomy of an expression pedal » strymon]]
    - [[http://www.strymon.net/2010/09/07/strymon-tech-corner-2-build-your-own-expression-pedal/][Strymon Tech Corner #2 - Build your own expression pedal » strymon]]
    - [[http://www.strymon.net/2011/10/10/strymon-tech-corner-3-volume-pedal-as-an-expression-pedal/][Strymon Tech Corner #3 – Volume Pedal as an Expression Pedal » strymon]]
    - [[http://missionengineering.com/?product_cat=multi-use-expression-pedals][Multi-Use Expression Pedals Archives | missionengineering.commissionengineering.com]]

* Alex's MIDI Program change sender                     :@midi:@arduino:@diy:
  Use a 4 button footswitch to send program changes via regular MIDI
  - Use regular 9V power
    Adafruit's UBEC's look like they will do
    - [[http://www.adafruit.com/products/1385][UBEC DC/DC Step-Down (Buck) Converter - 5V @ 3A output ID: 1385 - $9.95 : Adafruit Industries, Unique & fun DIY electronics and kits]]
    - [[http://www.adafruit.com/products/610][Panel Mount 2.1mm DC barrel jack ID: 610 - $2.95 : Adafruit Industries, Unique & fun DIY electronics and kits]]
    - [[http://nwazet.com/nwazet-pi-power-supply][Nwazet-Nwazet Pi Power Supply v2]]
    - [[http://www.cutedigi.com/tools/power-supply/wall-adapter-to-5v-and-3-3v-module.html][Wall Adapter to 5V and 3.3V Module]]
  - Do we need MIDI in?
    Can we use USB to receive SysEx messages to change the program
    changes being send, or do we want regular MIDI in.
    - Look at the iPad MIDI interface
      - [[http://axe4live.wordpress.com/2012/02/04/diy-midi-interface-for-ipad-version-2/][DIY MIDI interface for iPad version 2 | axe4live]]
      - [[http://axe4live.wordpress.com/2012/01/22/diy-midi-interface-for-ipad/][DIY MIDI Interface for iPad | axe4live]]
** Optocouplers                                   :@parts:@optocoupler:@midi:
   - [[http://ca.mouser.com/ProductDetail/Sharp-Microelectronics/PC900V0NSZXF/?qs=sGAEpiMZZMtd3yBnp8bAgHGtEprFC0C5UkXvs3QZHU8%3d][PC900V0NSZXF Sharp Microelectronics | Mouser]]
   - [[http://ca.mouser.com/ProductDetail/Fairchild-Semiconductor/6N139SVM/?qs=sGAEpiMZZMtd3yBnp8bAgFLBiV3sPncyLT2ArUA9fO0Ip7b5g%2fFgqg%3d%3d][6N139SVM Fairchild Semiconductor | Mouser]]
** Sliders
   - [[http://ca.mouser.com/ProductDetail/Bourns/PTA4543-2015DPB103/?qs=U/acTlguYxbmwS/tylIWJw==][PTA4543-2015DPB103 Bourns | Mouser]]

* Logic Control Surface plugin                                :@logic:@ctrlr:
** DONE Get the Logic Control Surface SDK
** DONE Compile the provided examples
** STARTED Create a MAX patch to act as a Logic Control Surface
   :LOGBOOK:
   - State "STARTED"    from ""           [2014-03-21 Fri 22:16]
   :END:
   :PROPERTIES:
   :ID:       ab511ea7-5d42-46eb-9ba1-eb583fa4e298
   :END:
** NEXT Duplicate the OSC plugin and make it connect to the MAX patch
   :PROPERTIES:
   :ID:       2fab55ed-660c-475b-800f-bf10711e7fec
   :END:
   Check what OSC messages the MAX patch receives.
** TODO Simplify the plugin code and add missing messages
   :PROPERTIES:
   :ID:       190fbac1-25f9-4a1f-8e5d-5f3791761b7c
   :END:

* [[file:projects/ctrlr.org][Ctrlr]]
